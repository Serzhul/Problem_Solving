/**
 * 1) N원 계산 후 거스름돈을 주어야 할때
 * 500, 100, 50, 10원 짜리 동전이 무한하게 존재
 * 손님에게 거스름돈을 돈의 개수가 K개 일 때 K의 최솟값
 *
 * Sol => 가장 큰 동전을 많이 준다는 순간의 최적을 이용하면 해당 답을 구할 수 있음
 * 거스름돈 서로가 배수와 약수의 관계 (Greedy 사용 가능)
 */

const N = 10;
let K = 4790;
const arr = [1, 5, 10, 50, 100, 500, 1000, 5000, 10000, 50000];

let count = 0;

for (let i = N - 1; i >= 0; i -= 1) {
  while (K - arr[i] >= 0) {
    console.log("K : ", K);
    K -= arr[i];
    count += 1;
  }
}

console.log(count);

/**
 * 2) N원 계산 후 거스름돈을 주어야 할때
 * 10, 7, 1원 짜리 동전이 무한하게 존재
 * 손님에게 거스름돈을 돈의 개수가 K개 일 때 K의 최솟값
 *
 * Sol => 가장 큰 동전을 많이 주는 방법이 아닌 또 다른 최적이 존재함
 * 거스름돈 서로가 배수와 약수의 관계 X => 반례 존재
 */
